import os

import sys
import numpy as np
from alfred.vis.image.common import get_unique_color_by_id
from alfred.fusion.kitti_fusion import LidarCamCalibData, \
    load_pc_from_file, lidar_pts_to_cam0_frame, lidar_pt_to_cam0_frame
from alfred.fusion.common import draw_3d_box, compute_3d_box, center_to_corner_3d
import cv2

# from 2011_09_26/2011_09_26_drive_0051_sync

img_f = os.path.join(os.path.dirname(os.path.abspath(__file__)), './data/000011.png')
v_f = os.path.join(os.path.dirname(os.path.abspath(__file__)), './data/000011.bin')
calib_f = os.path.join(os.path.dirname(os.path.abspath(__file__)), './data/000011.txt')
frame_calib = LidarCamCalibData(calib_f=calib_f)


# here are some SECOND 3d detector predicted result
# format: x, y, z, w, l, h, rotation_y
# KITTI is: x, y, z, h, w, l
# res = [[19.346336, 6.042622, -0.88500285, 1.600879, 3.8648725, 1.4550171, 5.1091743],
#        [29.93538, 1.5939925, -0.7215852, 1.5986736, 3.9108684, 1.4486158, 5.132188],
#        [40.259136, -1.3263291, -0.49155748, 1.5632737, 3.5060253, 1.4809406, 5.0916004],
#        [-4.681837, -6.570671, -1.2175045, 0.5555831, 0.5860929, 1.7398148, 1.001932],
#        [44.961884, 6.4837523, -1.5046263, 1.616607, 3.8675663, 1.4858866, 1.7715162],
#        [0.64804363, 9.268159, -0.9675394, 1.8812318, 4.664515, 2.0319507, 5.0961885],
#        [-18.386389, 28.60111, -1.3757074, 1.6804752, 4.304487, 1.4874152, 2.06815],
#        [11.712319, 15.615373, -0.98922193, 1.7269207, 4.3874264, 1.8423097, 1.8905786],
#        [-16.170248, -41.480247, -0.03097564, 0.686153, 0.6771428, 1.8784987, 0.22216623],
#        [25.267305, 45.637974, -2.197287, 2.0249672, 6.042538, 2.5292294, 1.0557717],
#        [-34.88346, -0.23137291, -2.1260715, 1.6999425, 4.036162, 1.5583847, 4.417797],
#        [-23.926195, 38.775394, -0.7054695, 1.5999469, 3.6549242, 1.5186816, 3.4325807],
#        [-2.1349354, 41.610023, -1.061486, 1.5652899, 3.5885417, 1.4904435, 0.03756565],
#        [-37.84355, 9.966844, -2.0794232, 1.9736364, 5.68608, 2.3399365, -0.5510466],
#        [8.264814, 33.205574, -1.3255441, 0.66961116, 0.7869765, 1.7961475, 3.5903516],
#        [28.852833, 10.282812, -1.0287172, 1.7898955, 4.7827206, 1.9273052, 1.8356056],
#        [-40.51386, 11.45538, -1.4465854, 0.6127639, 0.82885593, 1.7860174, 2.8919942],
#        [45.52217, -44.360752, -0.27851295, 1.9680248, 5.3572354, 2.2599475, 1.3303113],
#        [5.2633886, -27.981445, -0.22103542, 1.5714979, 3.5747764, 1.4712721, 1.3403505],
#        [24.08377, 32.71529, -0.1687476, 0.66240907, 0.75329924, 1.9358437, 1.1187644],
#        [-48.508858, 18.35507, -1.66853, 1.8876363, 4.866377, 2.1564689, -0.60276866],
#        [5.330953, -0.9705932, -1.8973715, 1.6167549, 4.0601134, 1.4391421, 3.4941106],
#        [-2.3959641, 17.38118, 0.11143422, 0.71009207, 0.67894447, 1.8217698, 2.5325458],
#        [-28.052588, -22.133669, 0.12951618, 0.7079723, 0.9623915, 1.8848807, 0.45091885],
#        [48.304996, -38.2871, -0.18393707, 1.8629241, 4.7361383, 2.012711, 4.508177],
#        [-27.806732, 4.885225, -0.93330365, 0.6153931, 0.76756793, 1.8323035, 2.430164],
#        [2.2722428, -7.6006374, -0.4065826, 0.67797977, 0.972077, 1.8399079, 0.2572404],
#        [-10.013947, 20.21774, -2.0035238, 1.7139361, 4.3931947, 1.5490046, 5.134586],
#        [14.573635, 26.88822, -1.6583468, 1.5832527, 3.80545, 1.490011, 0.52612585],
#        [-40.794884, 22.16341, -2.1041782, 0.6467646, 0.89500916, 1.7931361, -0.27015173]]

res = [[5.06, 1.43, 12.42, 1.90, 0.42, 1.04,  0.68],
       [-5.12, 1.85, 4.13, 1.50, 1.46, 3.70,  1.56],
       [-4.95, 1.83, 26.64, 1.86, 1.57, 3.83,  1.55]]

pcs = load_pc_from_file(v_f)
img = cv2.imread(img_f)

# _, coords = lidar_pts_to_cam0_frame(pcs, frame_calib)
# coords = np.transpose(coords)
# for p in coords:
#     # print(p[:2])
#     cv2.circle(img, (int(p[0]), int(p[1])), 2, (0, 255, 255), -1)

for p in res:
    xyz = np.array([p[: 3]])

    c2d = lidar_pt_to_cam0_frame(xyz, frame_calib)
    print(c2d)
    if c2d is not None:
        cv2.circle(img, (int(c2d[0]), int(c2d[1])), 8, (0, 0, 255), -1)

    # hwl -> lwh
    lwh = np.array([p[3: 6]])[:, [2, 1, 0]]
    print('lwh: ', lwh)
    r_y = p[6]
    print('r_y: ', r_y)
    # pts3d = center_to_corner_3d(xyz, lwh, origin=(0, 0, 0), axis=2)[0]
    pts3d = compute_3d_box(xyz[0], lwh[0], r_y)
    print(pts3d)

    pts2d = []
    for pt in pts3d:
        coords = lidar_pt_to_cam0_frame(pt, frame_calib)
        print(coords)
        if coords is not None:
            pts2d.append(coords[:2])
    pts2d = np.array(pts2d)
    print(pts2d)
    draw_3d_box(pts2d, img)

cv2.imshow('rr', img)
cv2.waitKey(0)
